# üîπ –ß—Ç–æ —Ç–∞–∫–æ–µ XOR (–∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò)
# –û–ø–µ—Ä–∞—Ü–∏—è ^ –≤ Python ‚Äî —ç—Ç–æ –ø–æ–±–∏—Ç–æ–≤–æ–µ –∏—Å–∫–ª—é—á–∞—é—â–µ–µ –ò–õ–ò (XOR):
#
# –†–∞–±–æ—Ç–∞–µ—Ç –ø–æ–±–∏—Ç–æ–≤–æ, —Ç–æ –µ—Å—Ç—å —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –∫–∞–∂–¥—É—é –ø–∞—Ä—É –±–∏—Ç–æ–≤ –¥–≤—É—Ö —á–∏—Å–µ–ª.
#
# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1, –µ—Å–ª–∏ –±–∏—Ç—ã —Ä–∞–∑–Ω—ã–µ, –∏ 0, –µ—Å–ª–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ.


# | –ë–∏—Ç A | –ë–∏—Ç B | A ^ B |
# | ----- | ----- | ----- |
# | 0     | 0     | 0     |
# | 0     | 1     | 1     |
# | 1     | 0     | 1     |
# | 1     | 1     | 0     |

#
#
# üîπ –†–∞–∑–±–æ—Ä 5 ^ 3 –ø–æ –±–∏—Ç–∞–º
#
# 5 = 0b0101
# 3 = 0b0011
# # –ü–æ–±–∏—Ç–æ–≤–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è:
#   0101   (5)
# ^ 0011   (3)
# = 0110   (6)
# #
# –ü–æ—è—Å–Ω–µ–Ω–∏–µ:
#
# 0 ^ 0 = 0
#
# 1 ^ 1 = 0
#
# 0 ^ 1 = 1
#
# 1 ^ 0 = 1
#
# –ò—Ç–æ–≥: 0110 –≤ –¥–≤–æ–∏—á–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ ‚Äî —ç—Ç–æ 6 –≤ –¥–µ—Å—è—Ç–∏—á–Ω–æ–π.


# üîπ –ß—Ç–æ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç
# –°–º—ã—Å–ª –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞, –Ω–æ –æ–±–æ–±—â—ë–Ω–Ω–æ:
#
# XOR –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã—è–≤–ª—è—Ç—å —Ä–∞–∑–ª–∏—á–∏—è –º–µ–∂–¥—É –¥–≤—É–º—è —á–∏—Å–ª–∞–º–∏ (–≤ –±–∏—Ç–∞—Ö).
#
# –í –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –∫—Ä–∏–ø—Ç–æ–≥—Ä–∞—Ñ–∏–∏ —á–∞—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ –ª–µ–≥–∫–æ –æ–±—Ä–∞—Ç–∏–º (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π XOR –≤–µ—Ä–Ω—ë—Ç –∏—Å—Ö–æ–¥–Ω–æ–µ).
#
# üîπ –ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç
# –ï—Å–ª–∏ —Ç—ã —Å–¥–µ–ª–∞–ª —Ç–∞–∫:
#
# c = a ^ b     # –ø–æ–ª—É—á–∏–ª–∏ 6
# a2 = c ^ b    # –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ 5
# b2 = c ^ a    # –æ–±—Ä–∞—Ç–Ω–æ –ø–æ–ª—É—á–∏–ª–∏ 3

# XOR –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–∞–∫ —Å–ø–æ—Å–æ–± —Å–∫—Ä—ã—Ç—å –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
# secret = 42
# key = 99
#
# encoded = secret ^ key
# decoded = encoded ^ key  # –≤–µ—Ä–Ω—ë—Ç 42


def get_unique_value(nums: list[int]) -> int:
    unique = 0
    for num in nums:
        unique ^= num
    print(f"–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç: {unique}")

# üîÅ –ú–æ–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ "–ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å"
# –ü–æ–¥—É–º–∞–π –æ XOR –∫–∞–∫ –æ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è:
#
# –ï—Å–ª–∏ —á–∏—Å–ª–æ –ø–æ—è–≤–∏–ª–æ—Å—å –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, –æ–Ω–æ "–≤–∫–ª—é—á–∞–µ—Ç—Å—è".
#
# –í—Ç–æ—Ä–æ–π —Ä–∞–∑ ‚Äî "–≤—ã–∫–ª—é—á–∞–µ—Ç—Å—è".
#
# –û—Å—Ç–∞–ª—Å—è –≤–∫–ª—é—á—ë–Ω–Ω—ã–º —Ç–æ–ª—å–∫–æ —Ç–æ—Ç, –∫—Ç–æ –±—ã–ª –æ–¥–∏–Ω —Ä–∞–∑.

# unique = 0
# –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —á–∏—Å–ª–∞ –≤ —Å–ø–∏—Å–∫–µ:
#     –µ—Å–ª–∏ —É–∂–µ –≤—Å—Ç—Ä–µ—á–∞–ª–æ—Å—å ‚Üí —É–±–∏—Ä–∞–µ–º
#     –µ—Å–ª–∏ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–ª–æ—Å—å ‚Üí –¥–æ–±–∞–≤–ª—è–µ–º
# –ò XOR –¥–µ–ª–∞–µ—Ç —ç—Ç–æ –±–µ–∑ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞!


def change_values_classic(a: int, b: int) -> tuple[int, int]:
    temp = a
    a = b
    b = temp

    return a, b


def change_values_with_xor(a: int, b: int) -> tuple[int, int]:
    a = a ^ b
    b = a ^ b
    a = a ^ b

    return a, b

# üß† –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?
# # –î–æ–ø—É—Å—Ç–∏–º:
# a = 5 (0101)
# b = 9 (1001)
# a = a ^ b ‚Üí a = 5 ^ 9 = 12 (1100)
#
# b = a ^ b ‚Üí b = 12 ^ 9 = 5 (–æ–±–Ω–æ–≤–∏–ª–∏ b)
#
# a = a ^ b ‚Üí a = 12 ^ 5 = 9 (–æ–±–Ω–æ–≤–∏–ª–∏ a)




if __name__ == "__main__":
    get_unique_value([4, 1, 2, 1, 2])

    a = 5
    b = 9
    print(f"Classical change values {change_values_classic(a, b)}")
    print(f"XOR change values {change_values_with_xor(a, b)}")